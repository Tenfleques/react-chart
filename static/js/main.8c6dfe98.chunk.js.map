{"version":3,"sources":["chart/DateFormat.js","chart/Canvas.js","chart/Chart.js","App.js","serviceWorker.js","index.js"],"names":["dateFormat","token","timezone","timezoneClip","pad","val","len","String","length","date","mask","utc","dF","arguments","Object","prototype","toString","call","test","undefined","Date","isNaN","SyntaxError","masks","slice","_","d","D","m","y","H","M","s","L","o","getTimezoneOffset","flags","dd","ddd","international","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","Math","round","t","tt","T","TT","Z","match","pop","replace","floor","abs","S","$0","default","dayMonthDateYear","monthDate","monthDateYear","monthYear","time24","isoTime","yearOnly","format","this","Canvas","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","toggleXGrid","grid","state","x","setState","plotUpper","scaleData","xx","max_x","max","apply","toConsumableArray","min_x","min","map","A","width","axes","allY","zz","concat","max_y","min_y","y_lower","i","j","ssy","height","ssy_lower","lower_height","push","scaled","range_x","range_y","all_y","invertScaleY","scaled_value","range","sort","a","b","invertScaleX","getFormat","delta_x","plotAxes","canvas","refs","canvas_upper","ctx","getContext","clearRect","lineWidth","strokeStyle","font","fillStyle","font_color","sorted_y","beginPath","lineTo","stroke","y_level","real_y_val","fillText","space","num_xs","mn_x","mx_x","x_level","closest_index","findIndex","slider","slider_rel_x","start_index","end_index","k","colors","plotLower","st","fract_x","frac_w","info_box","index","canvas_lower","plotSlider","rect","fill","mouseDown","e","pos","clientX","touches","rel_pos","getBoundingClientRect","left","pullArea","lower","upper","drag","x_at_mouse_down","grow","right","mouseUp","mouseMove","displacement","slide_factor","ctrl","width_ctrl","min_width","moveOverUpper","finx","arc","PI","w","threshold","_this2","details","col","react_default","createElement","key","style","color","className","names","onMouseUp","getInforBoxClass","infoBoxContent","ref","onMouseMove","onTouchMove","onMouseDown","onTouchStart","onTouchEnd","Component","Chart","ky","updateDimensions","document","body","offsetWidth","canvasElement","current","activeData","active_columns","active","buttonRow","entries","data","onClick","index_es","icon","faCheckCircle","faCircle","settingsRow","grid_y","toggleYGrid","grid_x","chart","keys","columns","filter","arr","React","createRef","window","addEventListener","removeEventListener","chart_Canvas","App","themes","current_theme","faMoon","themeSwitcher","chart_Chart","Boolean","location","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8c6dfe98.chunk.js","sourcesContent":["const dateFormat = function () {\n\tvar\ttoken = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZ]|\"[^\"]*\"|'[^']*'/g,\n\t\ttimezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\n\t\ttimezoneClip = /[^-+\\dA-Z]/g,\n\t\tpad = function (val, len) {\n\t\t\tval = String(val);\n\t\t\tlen = len || 2;\n\t\t\twhile (val.length < len) val = \"0\" + val;\n\t\t\treturn val;\n\t\t};\n\n\t// Regexes and supporting functions are cached through closure\n\treturn function (date, mask, utc) {\n\t\tvar dF = dateFormat;\n\n\t\t// You can't provide utc if you skip other args (use the \"UTC:\" mask prefix)\n\t\tif (arguments.length === 1 && Object.prototype.toString.call(date) === \"[object String]\" && !/\\d/.test(date)) {\n\t\t\tmask = date;\n\t\t\tdate = undefined;\n\t\t}\n\n\t\t// Passing date through Date applies Date.parse, if necessary\n\t\tdate = date ? new Date(date) : new Date();\n\t\tif (isNaN(date)) throw SyntaxError(\"invalid date\");\n\n\t\tmask = String(dF.masks[mask] || mask || dF.masks[\"default\"]);\n\n\t\t// Allow setting the utc argument via the mask\n\t\tif (mask.slice(0, 4) === \"UTC:\") {\n\t\t\tmask = mask.slice(4);\n\t\t\tutc = true;\n\t\t}\n\n\t\tvar\t_ = utc ? \"getUTC\" : \"get\",\n\t\t\td = date[_ + \"Date\"](),\n\t\t\tD = date[_ + \"Day\"](),\n\t\t\tm = date[_ + \"Month\"](),\n\t\t\ty = date[_ + \"FullYear\"](),\n\t\t\tH = date[_ + \"Hours\"](),\n\t\t\tM = date[_ + \"Minutes\"](),\n\t\t\ts = date[_ + \"Seconds\"](),\n\t\t\tL = date[_ + \"Milliseconds\"](),\n\t\t\to = utc ? 0 : date.getTimezoneOffset(),\n\t\t\tflags = {\n\t\t\t\td:    d,\n\t\t\t\tdd:   pad(d),\n\t\t\t\tddd:  dF.international.dayNames[D],\n\t\t\t\tdddd: dF.international.dayNames[D + 7],\n\t\t\t\tm:    m + 1,\n\t\t\t\tmm:   pad(m + 1),\n\t\t\t\tmmm:  dF.international.monthNames[m],\n\t\t\t\tmmmm: dF.international.monthNames[m + 12],\n\t\t\t\tyy:   String(y).slice(2),\n\t\t\t\tyyyy: y,\n\t\t\t\th:    H % 12 || 12,\n\t\t\t\thh:   pad(H % 12 || 12),\n\t\t\t\tH:    H,\n\t\t\t\tHH:   pad(H),\n\t\t\t\tM:    M,\n\t\t\t\tMM:   pad(M),\n\t\t\t\ts:    s,\n\t\t\t\tss:   pad(s),\n\t\t\t\tl:    pad(L, 3),\n\t\t\t\tL:    pad(L > 99 ? Math.round(L / 10) : L),\n\t\t\t\tt:    H < 12 ? \"a\"  : \"p\",\n\t\t\t\ttt:   H < 12 ? \"am\" : \"pm\",\n\t\t\t\tT:    H < 12 ? \"A\"  : \"P\",\n\t\t\t\tTT:   H < 12 ? \"AM\" : \"PM\",\n\t\t\t\tZ:    utc ? \"UTC\" : (String(date).match(timezone) || [\"\"]).pop().replace(timezoneClip, \"\"),\n\t\t\t\to:    (o > 0 ? \"-\" : \"+\") + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\n\t\t\t\tS:    [\"th\", \"st\", \"nd\", \"rd\"][d % 10 > 3 ? 0 : (d % 100 - d % 10 !== 10) * d % 10]\n\t\t\t};\n\n\t\treturn mask.replace(token, function ($0) {\n\t\t\treturn $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);\n\t\t});\n\t};\n}();\n\ndateFormat.masks = {\n\t\"default\"\t      \t:\"ddd mmm dd yyyy HH:MM:ss\",\n\tdayMonthDateYear \t:\"ddd, mmm d, yyyy\",\n\tmonthDate     \t\t:\"mmm d\",\n\tmonthDateYear\t  \t:\"mmm d, yyyy\",\n\tmonthYear \t\t\t:\"mmm yyyy\",\n\ttime24\t         \t:\"HH:MM\",\n\tisoTime\t\t\t\t:\"HH:MM:ss\",\n\tyearOnly\t\t\t:\"yyyy\"\n};\n// Internationalization strings\n\n/*dateFormat.international = {\n\tdayNames: [\n\t\t\"sv\", \"mv\", \"cp\", \"ct\", \"cn\", \"cs\", \"mg\",\"Svondo\" ,\"Muvhuro\" ,\"Chipiri\" ,\"Chitatu\" ,\"China\" ,\"Chishanu\" ,\"Mugovera\"\n\t],\n\tmonthNames: [\n\t\t\"ndr\", \"kkd\", \"krm\", \"kbv\", \"cvb\", \"ckm\", \"ckr\", \"nmv\", \"gny\", \"gmr\", \"mdz\", \"zvt\",\"Ndira\", \"Kukadzi\", \"Kurume\", \"Kubvumbi\", \"Chivabvu\", \"Chikumi\", \"Chikunguru\", \"Nyamavhuvhu\", \"Gunyana\", \"Gumiguru\", \"Mbudzi\", \"Zvita\"\n\t]\n};*/\n\ndateFormat.international = {\n\tdayNames: [\n\t\t\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\",\"Sunday\" ,\"Monday\" ,\"Tuesday\" ,\"Wednesday\" ,\"Thursday\" ,\"Friday\" ,\"Saturday\"\n\t],\n\tmonthNames: [\n\t\t\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\", \"jul\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\",\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n\t]\n};\n\nexport default dateFormat;","import React, { Component} from 'react';\nimport dateFormat from \"./DateFormat\";\n\nDate.prototype.format = function (mask, utc) {\n\treturn dateFormat(this, mask, utc);\n};\n\nclass Canvas extends Component{\n    constructor(props){\n        super(props);\n        const w = Math.max(props.width,220);\n        this.state = {\n            height : 400,\n            width : w,\n            lower_height: 80,\n            grid : {\n                y : true,\n                x : false,\n                strokeStyle : \"rgba(0,0,0,.9)\",\n                lineWidth : .12\n            },\n            axes : {\n                x : {\n                    threshold : .3,\n                    height : 50\n                },\n                y : {\n                    threshold : .2,\n                    width : 20\n                },\n                font : \"15px Arial\",\n                font_color : \"#999\"\n            },\n            slider: {\n                x : .5*w,\n                y : 80,\n                width: 50,\n                height: -80,\n                min_width: 10,\n                lineWidth : 6,\n                stroke: \"#ddd\",\n                fill: \"rgba(255,255,255,0.8)\",\n                drag: false,\n                grow: {\n                    right : false,\n                    left : false \n                },\n                x_at_mouse_down: 0,\n                slide_factor: 1\n            },\n            y : props.y,\n            x : props.x,\n            scaled: {\n                range_x: [],\n                range_y: {},\n                x : [],\n                y : {},\n                y_lower : [],\n                all_y : []\n            },\n            info_box: {\n                index : -1,\n                x : 0\n            }\n        }\n        var max_y = 100;\n        //get num_digits of max y, to calculate the width of y axis\n        for(var zz in props.y){\n            max_y = Math.max(max_y, Math.max(...props.y[zz]));\n        }        \n        this.state.axes.y.width = max_y.toString().length *10;\n        \n    }\n    componentWillMount(){\n        this.scaleData();\n    }\n    toggleYGrid(){\n        let grid = this.state.grid;\n        grid.y = !grid.y;\n        this.setState({\n            grid : grid\n        }, () => {\n            this.plotUpper();\n        });\n    }\n    toggleXGrid = () => {\n        let grid = this.state.grid;\n        grid.x = !grid.x;\n        this.setState({\n            grid : grid\n        }, () => {\n            this.plotUpper();\n        });\n    }\n    scaleData = (xx,yy) => {   \n        if(!xx){\n            xx = this.state.x;\n            yy = this.state.y;\n        }\n\n        let max_x = Math.max(...xx);\n        let min_x = Math.min(...xx);\n\n        let x = xx.map((A) => {\n            //add the alowance of the y-axis\n            return ((A - min_x)/(max_x - min_x))*(this.state.width) + this.state.axes.y.width;\n        });\n\n        let allY = [];\n        for(var zz in yy){\n            allY = allY.concat(yy[zz]);\n        }\n\n        let max_y = Math.max(...allY);\n        let min_y = Math.min(...allY);\n\n        let y = {}, y_lower = {};\n        for(var i  in yy){\n            y[i] = [];\n            y_lower[i] = [];\n            for(var j = 1; j < yy[i].length; ++ j){\n\n                let ssy = - ((yy[i][j] - min_y)/(max_y - min_y))*(this.state.height) + this.state.height;\n                \n                let ssy_lower = - ((yy[i][j] - min_y)/(max_y - min_y))*(this.state.lower_height) + this.state.lower_height;\n\n                y[i].push(ssy)\n                y_lower[i].push(ssy_lower);\n            }\n        }\n        this.setState({\n            scaled : {\n                range_x : xx,\n                range_y : yy,\n                x: x,\n                y: y,\n                y_lower : y_lower,\n                all_y : allY\n            }\n        });\n        return {\n            range_x : xx,\n            range_y : yy,\n            x: x,\n            y: y,\n            y_lower : y_lower,\n            all_y : allY\n        }\n    }\n    invertScaleY = (scaled_value, min_y, range) => {\n        const scaled = this.state.scaled;\n        const y = scaled.all_y.sort((a,b) => a - b);\n        const l = y.length - 1;\n        min_y = min_y || y[0];\n        range = range || (y[l] - y[0]);\n        \n        return ((- scaled_value + this.state.height)/this.state.height) * range + min_y;\n    }\n    invertScaleX = (scaled_value, min_x, range) => {\n        const scaled = this.state.scaled;\n        const x = scaled.x.sort((a,b) => a - b);\n        const l = x.length - 1;\n        min_x = min_x || x[0];\n        range = range || (x[l] - x[0]);\n\n        return ((scaled_value - this.state.axes.y.width)/this.state.width) * range + min_x;\n    }\n    getFormat = (delta_x) => {\n        const sec = 1000, \n        mins = 60 * sec,\n        hrs = 60 * mins, \n        days = 24 * hrs, \n        weeks = 7 * days,  \n        months = 31 * days; \n\n        if(delta_x > 6*months){\n            return \"monthYear\";\n        }\n        \n        if(delta_x > 8*weeks){\n            return \"monthDateYear\";\n        }\n        if(delta_x > 2*days){\n            return \"monthDate\";\n        }\n        if(delta_x> mins){\n            return \"time24\";\n        }     \n        return \"isoTime\";\n        \n    }\n    plotAxes = (xx, yy) => {\n        \n        const canvas = this.refs.canvas_upper;\n        const ctx = canvas.getContext(\"2d\");\n\n        //clear x axis\n        ctx.clearRect(0,this.state.height,canvas.width + 2*this.state.axes.y.width, this.state.axes.x.height);\n        \n        //clear y axis\n        ctx.clearRect(0,0,this.state.axes.y.width, canvas.height);\n\n        ctx.lineWidth = this.state.grid.lineWidth;\n        ctx.strokeStyle = this.state.grid.strokeStyle;\n        \n        ctx.font = this.state.axes.font;\n        ctx.fillStyle = this.state.axes.font_color;\n    \n        const sorted_y = yy.sort((a,b) => a-b);\n        const range_y = sorted_y[sorted_y.length - 1] - sorted_y[0];\n\n        if(this.state.grid.y){                \n            ctx.beginPath();\n            ctx.lineTo(this.state.axes.y.width, 0);\n            ctx.lineTo(this.state.width + this.state.axes.y.width, 0);  \n            ctx.stroke(); \n        } \n        for(var j = 0, i = 1; j < 10; j++, --i){\n            const y_level = this.state.height +  i * 45;\n            if(this.state.grid.y && j > 1){                \n                ctx.beginPath();\n                ctx.lineTo(this.state.axes.y.width, y_level);\n                ctx.lineTo(this.state.width + this.state.axes.y.width, y_level);  \n                ctx.stroke(); \n            }              \n            const real_y_val = this.invertScaleY(y_level,sorted_y[0],range_y);\n            if(j){\n                real_y_val && ctx.fillText(Math.round(real_y_val),0, y_level );  \n            }\n        }\n        ctx.beginPath();\n        ctx.lineTo(this.state.axes.y.width - 5, this.state.height);\n        ctx.lineTo(this.state.width + this.state.axes.y.width, this.state.height );  \n        ctx.stroke();\n\n        const space = 3.5*this.state.axes.y.width;\n        const num_xs = Math.round(this.state.width/space);\n        \n        \n        const mn_x = Math.min(...xx),\n                mx_x = Math.max(...xx);\n\n        const format = this.getFormat(mx_x - mn_x);\n        var x_level =  this.state.axes.y.width - 5; //initial point\n                      \n        ctx.beginPath();\n        ctx.lineTo(x_level, 0);\n        ctx.lineTo(x_level, this.state.height);  \n        ctx.stroke(); \n        \n        for(var j = 0, i = 1; j < num_xs; j++, --i){            \n            const closest_index = this.state.scaled.x.findIndex(a => a > x_level);\n            if(closest_index !== -1){\n                ctx.fillText(new Date(this.state.scaled.range_x[closest_index]).format(format),x_level, this.state.height + this.state.axes.x.height/2);\n            }            \n            x_level += space;\n            if(this.state.grid.x){                \n                ctx.beginPath();\n                ctx.lineTo(x_level, 0);\n                ctx.lineTo(x_level, this.state.height);  \n                ctx.stroke(); \n            } \n        }\n    }\n    plotUpper = (xx, yy) => {\n        if(!xx){\n            xx = this.state.x;\n            yy = this.state.y;\n        }\n        const canvas = this.refs.canvas_upper;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        \n        const slider = this.state.slider;\n        const slider_rel_x = slider.x - this.state.axes.y.width;\n\n        const start_index = Math.floor(xx.length * slider_rel_x/(this.state.width)) ;\n\n        const end_index = Math.round(xx.length * (slider_rel_x + slider.width)/(this.state.width- 1.9*slider.lineWidth));\n\n        let x = xx.slice(start_index, end_index), y = {};\n        for(var k in yy){\n            y[k] = yy[k].slice(start_index, end_index);\n        }\n        const scaled = this.scaleData(x,y);  \n        //console.log(scaled)\n        this.plotAxes(scaled.range_x,scaled.all_y)\n\n        ctx.lineWidth = .5;\n        for(var i in scaled.y){\n            ctx.strokeStyle = this.props.colors[i];\n            ctx.beginPath();\n            for(var j = 0; j < scaled.y[i].length; ++ j){\n                ctx.lineTo(scaled.x[j], scaled.y[i][j] );\n                ctx.stroke();  \n            }\n        }\n        \n    }\n    plotLower = (x,y, width) => {\n        if(!x){\n            x = this.state.x;\n            y = this.state.y;\n        }\n        \n        const st = this.state;\n        st.x = x;\n        st.y = y;\n        if(width){\n            const fract_x = st.slider.x/st.width;\n            const frac_w = st.slider.width/st.width;\n\n            width = Math.max(width,220);\n            st.width = width;\n            \n            st.slider.width = frac_w * st.width;\n            st.slider.x = fract_x * st.width;\n            st.info_box.index = -1;\n        }\n\n        this.setState(st, () => {\n            const scaled = this.scaleData(x,y);\n            const canvas = this.refs.canvas_lower;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx.lineWidth = 1;\n            for(var i in scaled.y_lower){\n                ctx.strokeStyle = this.props.colors[i];\n                ctx.beginPath(); \n                for(var j = 0; j < scaled.y_lower[i].length; ++ j){\n                    ctx.lineTo(scaled.x[j], scaled.y_lower[i][j]);\n                    ctx.stroke();  \n                }\n            }\n            this.plotSlider();\n            this.plotUpper(x,y);   \n        });\n        \n    }\n    plotSlider = () =>{\n        const canvas = this.refs.canvas_lower;\n        const ctx = canvas.getContext(\"2d\");\n        //draw the active part\n        ctx.beginPath();\n\n        ctx.lineWidth = this.state.slider.lineWidth;\n        ctx.rect(\n            this.state.slider.x,\n            this.state.slider.y,\n            this.state.slider.width,\n            this.state.slider.height);\n            ctx.strokeStyle = this.state.slider.stroke;\n        ctx.stroke();\n\n        //draw the inactive parts\n        ctx.beginPath();\n        ctx.rect(\n            this.state.axes.y.width-this.state.slider.lineWidth/2,\n            this.state.slider.y,\n            this.state.slider.x - this.state.axes.y.width,\n            this.state.slider.height);\n        \n        ctx.fillStyle = this.state.slider.fill;\n        ctx.fill();\n\n        //draw the extra inactive part after the active\n        ctx.beginPath();\n        ctx.rect(\n            this.state.slider.x + this.state.slider.width + this.state.slider.lineWidth/2,\n            this.state.slider.y,\n            this.state.width - (this.state.slider.x + this.state.slider.width),\n            this.state.slider.height);\n        \n        ctx.fillStyle = this.state.slider.fill;\n        ctx.fill();\n    }\n    mouseDown = (e) =>{\n        const canvas = this.refs.canvas_lower;\n        const pos = e.clientX || e.touches[0].clientX;\n\n        //destroy the info box\n        this.setState({info_box : {\n            index : -1\n        }});\n        \n        const rel_pos = pos - canvas.getBoundingClientRect().left;\n        \n        let slider = this.state.slider\n        \n        const pullArea = {\n            \"left\" : {\n                \"lower\" : slider.x - slider.lineWidth,\n                \"upper\" : slider.x + slider.lineWidth,\n            },\n            \"right\" : {\n                \"lower\" : slider.x + slider.width - slider.lineWidth,\n\n                \"upper\" : slider.x + slider.width + slider.lineWidth,\n            }\n        }\n\n        if(rel_pos > pullArea.left.upper \n            && rel_pos < pullArea.right.lower){ //we are draging whole slider\n\n            slider.drag = true;\n            slider.x_at_mouse_down = rel_pos;\n            this.setState({slider});\n\n        }else if(rel_pos >= pullArea.left.lower && rel_pos <= pullArea.left.upper){ //we are pulling to the left\n\n            slider.x_at_mouse_down = rel_pos;\n            slider.grow.left = true;\n\n            this.setState({slider});\n        }else if(rel_pos >= pullArea.right.lower && rel_pos <= pullArea.right.upper){ //we are pulling to the right\n            \n            slider.x_at_mouse_down = rel_pos;\n            slider.grow.right = true;\n            this.setState({slider});\n        }        \n    }\n    mouseUp = (e) => {\n        let slider = this.state.slider\n        slider.drag = false;\n        slider.grow.right = false;\n        slider.grow.left = false;\n        slider.x_at_mouse_down = 0;\n        this.setState({slider});\n    }\n    mouseMove = (e) => {  \n        const canvas = this.refs.canvas_lower;\n        const pos = e.clientX || e.touches[0].clientX;;\n        const rel_pos = pos - canvas.getBoundingClientRect().left;      \n        \n        let slider = this.state.slider;\n        var displacement = (rel_pos - slider.x_at_mouse_down) * slider.slide_factor;\n        slider.x_at_mouse_down = rel_pos;  \n\n        if(this.state.slider.drag){            \n            // slider.slide_factor makes sliding it smoother\n            const ctrl = displacement + slider.x;\n            if( ctrl < this.state.axes.y.width){\n                displacement = 0 \n            }else if(ctrl + slider.width > this.state.width){\n                displacement = this.state.width - (slider.width + slider.x);\n                slider.drag = false;\n            }\n            slider.x += displacement;            \n        }\n        else if(this.state.slider.grow.left){\n            const ctrl = displacement + slider.x;\n            const width_ctrl = slider.width - displacement;\n        \n            if(ctrl > this.state.axes.y.width && width_ctrl > slider.min_width){\n                slider.x += displacement;\n                slider.width -= displacement;\n            }\n            \n        }else if(this.state.slider.grow.right){\n            const ctrl = displacement + slider.x + slider.width;\n            const width_ctrl = slider.width + displacement;\n        \n            if(ctrl < this.state.width \n                && width_ctrl < this.state.width\n                && width_ctrl > slider.min_width){\n                slider.width += displacement;\n            }\n        }else{\n            return;\n        }\n        this.setState({slider},this.plotLower);\n    }\n    moveOverUpper = (e) =>{\n        const canvas = this.refs.canvas_upper;\n        const pos = e.clientX || e.touches[0].clientX;;\n        const rel_pos = pos - canvas.getBoundingClientRect().left;\n        const ctx = canvas.getContext(\"2d\");\n\n        if(rel_pos < this.state.grid.y.width){\n            return;\n        }\n        const index = this.state.scaled.x.findIndex((a) => {\n            return a > rel_pos;\n        });\n        \n\n        if(index >= 0){\n            this.setState({info_box : {\n                    index : index,\n                    x : rel_pos - this.state.axes.y.width\n                }\n            },() =>{\n                this.plotUpper()    \n                ctx.strokeStyle = \"#333\";\n                ctx.fillStyle = \"#fff\";\n                ctx.lineWidth = \"1\";\n                ctx.beginPath()\n                ctx.lineTo(rel_pos, 0);\n                ctx.lineTo(rel_pos, this.state.height);\n                ctx.stroke(); \n\n                const finx = this.state.scaled.x.findIndex((a) => Math.abs(a - rel_pos) < 3 );\n                if(finx !== -1){\n                    ctx.lineWidth = \"4\";\n                    for(var i in this.state.scaled.y){\n                        ctx.beginPath();\n                        ctx.strokeStyle = this.props.colors[i]\n                        ctx.arc(rel_pos, this.state.scaled.y[i][finx], 3, 0, 2 * Math.PI);\n                        ctx.stroke();\n                        ctx.fill();\n                    }\n                }\n                \n            })                      \n        }        \n    }\n    infoBoxContent(){\n        const index = this.state.info_box.index || -1;\n        if(index < 0){\n            return;\n        }\n        const date = this.state.scaled.range_x[index];\n        const details = []\n\n        for(var i in this.state.scaled.range_y) {\n            const col = this.props.colors[i]\n            details.push(<div key={i} style={{color : col}} className=\"d-inline-flex mr-1 text-center\">\n                    <h4>\n                        {\n                            this.state.scaled.range_y[i][index]\n                        } <br/>\n                        <small>{this.props.names[i]}</small>\n                    </h4>\n                </div>\n            );\n        };\n        return (\n            <div className=\"\">\n                <div className=\"info-date\" key={\"date\"}>\n                    {new Date(date).format(\"dayMonthDateYear\")}\n                </div>\n                {details}\n            </div>            \n        );\n    }   \n    getInforBoxClass(){\n        const index = this.state.info_box.index || -1;\n        return (index < 0) ? \"info-box d-none\" : \"info-box d-flex\";\n    }\n    render () {\n    \n        return (\n            <div onMouseUp={this.mouseUp} className=\"chart-area d-block\">\n                <div className={this.getInforBoxClass()} style={{left:this.state.info_box.x}}>\n                    {this.infoBoxContent()}\n                </div>\n                <canvas \n                    ref=\"canvas_upper\" \n                    width={this.state.width + 2*this.state.axes.y.width} \n                    height={this.state.height + this.state.axes.x.height} \n                    onMouseMove={this.moveOverUpper} \n                    onTouchMove={this.moveOverUpper} \n                />\n                <canvas \n                    ref=\"canvas_lower\" \n                    width={this.state.width} \n                    height={this.state.lower_height} \n                    onMouseDown={this.mouseDown} \n                    onMouseMove={this.mouseMove} \n                    onMouseUp={this.mouseUp} \n                    \n                    onTouchStart={this.mouseDown}\n                    onTouchMove={this.mouseMove}\n                    onTouchEnd={this.mouseUp}\n                    />\n               \n            </div>\n        )\n    }\n\n}\n\nexport default Canvas;","import React, {Component } from \"react\"\nimport Canvas from \"./Canvas\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle} from '@fortawesome/free-solid-svg-icons'\nimport {faCircle } from '@fortawesome/free-regular-svg-icons'\n\nimport data from \"./data/chart_data\"\n\nclass Chart extends Component{\n    constructor (props) {\n        super(props);\n        this.state = {\n            data: data[props.chart],\n            names: Object.keys(data[props.chart].names),\n            active: {},\n            x : [],\n            y : {},\n            width : document.body.offsetWidth - 350,\n            grid_x : false,\n            grid_y : true\n        }\n        for (var ky in this.state.names){\n            this.state.active[this.state.names[ky]] = true;\n        }\n        this.state.x = this.state.data.columns.filter((arr) => {\n            return arr[0] === 'x';\n        })[0].slice(1);\n\n        let y = {};\n        for(var i = 0; i < this.state.data.columns.length; ++i){\n            let k = this.state.data.columns[i][0]\n            if(k === 'x')\n                continue;            \n            y[k] = this.state.data.columns[i].slice(1);\n        }\n        this.state.y = y; \n        this.canvasElement = React.createRef();       \n    }\n    updateDimensions = () => {\n        const w = document.body.offsetWidth - 350;\n        this.setState({\n            width : w\n        },()=>{\n            this.canvasElement.current.plotLower(this.state.x, this.activeData(), w)\n        });\n    }\n    componentWillMount() {\n        this.updateDimensions();\n    }\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.updateDimensions);\n    }\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateDimensions);\n    }\n    activeData = () => {       \n        let active_columns = {};\n        for(var ky in this.state.active){\n            if(this.state.active[ky]){\n                active_columns[ky] = this.state.y[ky];\n            }\n        }\n        return active_columns;\n    }\n    buttonRow = () => {\n        return Object.entries(this.state.data.names).map((k) => {\n            return (\n\n                <button \n                    key = {k[0]}\n                    className=\"action-btn\" \n                    style={ {color : this.state.data.colors[k[0]]}}\n                    onClick={() => {\n                            let active = this.state.active;\n                            active[k[0]] = !active[k[0]];\n                            this.setState({active})\n                            this.canvasElement.current.plotLower(this.state.x, this.activeData());\n                        }\n                    }\n                >\n                    {\n                        this.state.active[k[0]] ? \n                            <FontAwesomeIcon icon={faCheckCircle} />\n                        :   <FontAwesomeIcon icon={faCircle} />\n                    }          \n                    {k[1]} \n            </button>\n            )\n        });\n    }\n    settingsRow = () => {\n        return (\n            <div>\n                 <button \n                    key = \"toggle-y-grid\"\n                    className={(this.state.grid_y)? \"toggle-grid active\" : \"toggle-grid\"} \n                    onClick={() => {\n                           this.setState({grid_y : !this.state.grid_y})\n                           this.canvasElement.current.toggleYGrid();\n                        }\n                    }\n                >\n                toggle Y grid\n                </button>\n                <button \n                    key = \"toggle-x-grid\"\n                    className={(this.state.grid_x)? \"toggle-grid active\" : \"toggle-grid\"} \n                    onClick={() => {\n                           this.setState({grid_x : !this.state.grid_x})\n                           this.canvasElement.current.toggleXGrid();\n                        }\n                    }\n                >\n                toggle X grid\n                </button>\n            </div>\n        )\n    }\n    render() {\n        return (\n            <div className=\"mb-3 border-bottom\">\n                <h2>Chart {this.props.chart + 1}</h2>\n                <div className=\"row mx-3\">\n                    {this.settingsRow()}\n                </div>\n                <Canvas \n                    ref={this.canvasElement} \n                    x={this.state.x} \n                    y={this.activeData()} \n                    colors={this.state.data.colors}\n                    names={this.state.data.names} \n                    width={this.state.width}\n                    />\n\n                <div className=\"row mx-3\">\n                    {this.buttonRow()}\n                </div>\n            </div>\n        )\n    }\n}\nexport default Chart;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMoon} from '@fortawesome/free-solid-svg-icons'\n\nimport Chart from \"./chart/Chart\"\nimport './App.css';\n\nclass App extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      themes : [\"App light\", \"App mojave\"],\n      current_theme: 0,\n      width : 400\n    }   \n  }\n  themeSwitcher (){\n    return (            \n        <FontAwesomeIcon icon={faMoon} className=\"theme-switcher fa-2x mx-3 mt-1\" \n        onClick={() => {\n            this.setState({\n              current_theme : (this.state.current_theme === 0)? 1 : 0\n            })\n        }\n      }/>\n    )\n  }\n  render() {\n    return (\n      <div className={this.state.themes[this.state.current_theme]} >\n        <div className=\"charcoal fixed-top row\">\n          <h1 className=\"mx-3\">Statistics</h1>\n          {this.themeSwitcher()}\n        </div>\n        <div className=\"mt-5\">\n          <div className=\"row my-3\">\n            <Chart chart={0}/>\n          </div>\n          <div className=\"row my-3\"><Chart chart={1}/></div>\n          <div className=\"row my-3\"><Chart chart={2}/></div>\n          <div className=\"row my-3\"><Chart chart={3}/></div>\n          <div className=\"row my-3\"><Chart chart={4}/></div>\n        </div>\n        \n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["chart/DateFormat.js","chart/Canvas.js","chart/Chart.js","App.js","serviceWorker.js","index.js"],"names":["dateFormat","token","timezone","timezoneClip","pad","val","len","String","length","date","mask","utc","dF","arguments","Object","prototype","toString","call","test","undefined","Date","isNaN","SyntaxError","masks","slice","_","d","D","m","y","H","M","s","L","o","getTimezoneOffset","flags","dd","ddd","international","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","Math","round","t","tt","T","TT","Z","match","pop","replace","floor","abs","S","$0","default","dayMonthDateYear","monthDate","monthDateYear","monthYear","time24","isoTime","yearOnly","format","this","Canvas","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","scaleData","xx","state","x","max_x","max","apply","toConsumableArray","min_x","min","map","A","width","axes","allY","zz","concat","max_y","min_y","y_lower","i","j","ssy","height","ssy_lower","lower_height","push","setState","scaled","range_x","range_y","all_y","invertScaleY","scaled_value","range","sort","a","b","invertScaleX","getFormat","delta_x","plotAxes","canvas","refs","canvas_upper","ctx","getContext","clearRect","lineWidth","grid","strokeStyle","font","fillStyle","font_color","sorted_y","beginPath","lineTo","stroke","y_level","real_y_val","fillText","space","num_xs","mn_x","mx_x","x_level","closest_index","findIndex","plotUpper","slider","slider_rel_x","start_index","end_index","k","colors","plotLower","canvas_lower","plotSlider","rect","fill","mouseDown","e","pos","clientX","touches","info_box","index","rel_pos","getBoundingClientRect","left","pullArea","lower","upper","drag","x_at_mouse_down","grow","right","mouseUp","mouseMove","displacement","slide_factor","ctrl","width_ctrl","min_width","moveOverUpper","finx","arc","PI","w","threshold","details","col","react_default","createElement","key","style","color","className","names","_React$createElement","onMouseUp","getInforBoxClass","infoBoxContent","ref","onMouseMove","onTouchMove","onMouseDown","bind","onPointerDown","onPointerMove","defineProperty","Component","Chart","ky","activeData","active_columns","active","buttonRow","entries","data","onClick","canvasElement","current","index_es","icon","faCheckCircle","faCircle","chart","keys","columns","filter","arr","React","createRef","document","body","offsetWidth","chart_Canvas","getWidth","App","themes","current_theme","_this2","faMoon","themeSwitcher","chart_Chart","Boolean","window","location","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff855baa.chunk.js","sourcesContent":["const dateFormat = function () {\n\tvar\ttoken = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZ]|\"[^\"]*\"|'[^']*'/g,\n\t\ttimezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\n\t\ttimezoneClip = /[^-+\\dA-Z]/g,\n\t\tpad = function (val, len) {\n\t\t\tval = String(val);\n\t\t\tlen = len || 2;\n\t\t\twhile (val.length < len) val = \"0\" + val;\n\t\t\treturn val;\n\t\t};\n\n\t// Regexes and supporting functions are cached through closure\n\treturn function (date, mask, utc) {\n\t\tvar dF = dateFormat;\n\n\t\t// You can't provide utc if you skip other args (use the \"UTC:\" mask prefix)\n\t\tif (arguments.length === 1 && Object.prototype.toString.call(date) === \"[object String]\" && !/\\d/.test(date)) {\n\t\t\tmask = date;\n\t\t\tdate = undefined;\n\t\t}\n\n\t\t// Passing date through Date applies Date.parse, if necessary\n\t\tdate = date ? new Date(date) : new Date();\n\t\tif (isNaN(date)) throw SyntaxError(\"invalid date\");\n\n\t\tmask = String(dF.masks[mask] || mask || dF.masks[\"default\"]);\n\n\t\t// Allow setting the utc argument via the mask\n\t\tif (mask.slice(0, 4) === \"UTC:\") {\n\t\t\tmask = mask.slice(4);\n\t\t\tutc = true;\n\t\t}\n\n\t\tvar\t_ = utc ? \"getUTC\" : \"get\",\n\t\t\td = date[_ + \"Date\"](),\n\t\t\tD = date[_ + \"Day\"](),\n\t\t\tm = date[_ + \"Month\"](),\n\t\t\ty = date[_ + \"FullYear\"](),\n\t\t\tH = date[_ + \"Hours\"](),\n\t\t\tM = date[_ + \"Minutes\"](),\n\t\t\ts = date[_ + \"Seconds\"](),\n\t\t\tL = date[_ + \"Milliseconds\"](),\n\t\t\to = utc ? 0 : date.getTimezoneOffset(),\n\t\t\tflags = {\n\t\t\t\td:    d,\n\t\t\t\tdd:   pad(d),\n\t\t\t\tddd:  dF.international.dayNames[D],\n\t\t\t\tdddd: dF.international.dayNames[D + 7],\n\t\t\t\tm:    m + 1,\n\t\t\t\tmm:   pad(m + 1),\n\t\t\t\tmmm:  dF.international.monthNames[m],\n\t\t\t\tmmmm: dF.international.monthNames[m + 12],\n\t\t\t\tyy:   String(y).slice(2),\n\t\t\t\tyyyy: y,\n\t\t\t\th:    H % 12 || 12,\n\t\t\t\thh:   pad(H % 12 || 12),\n\t\t\t\tH:    H,\n\t\t\t\tHH:   pad(H),\n\t\t\t\tM:    M,\n\t\t\t\tMM:   pad(M),\n\t\t\t\ts:    s,\n\t\t\t\tss:   pad(s),\n\t\t\t\tl:    pad(L, 3),\n\t\t\t\tL:    pad(L > 99 ? Math.round(L / 10) : L),\n\t\t\t\tt:    H < 12 ? \"a\"  : \"p\",\n\t\t\t\ttt:   H < 12 ? \"am\" : \"pm\",\n\t\t\t\tT:    H < 12 ? \"A\"  : \"P\",\n\t\t\t\tTT:   H < 12 ? \"AM\" : \"PM\",\n\t\t\t\tZ:    utc ? \"UTC\" : (String(date).match(timezone) || [\"\"]).pop().replace(timezoneClip, \"\"),\n\t\t\t\to:    (o > 0 ? \"-\" : \"+\") + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\n\t\t\t\tS:    [\"th\", \"st\", \"nd\", \"rd\"][d % 10 > 3 ? 0 : (d % 100 - d % 10 !== 10) * d % 10]\n\t\t\t};\n\n\t\treturn mask.replace(token, function ($0) {\n\t\t\treturn $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);\n\t\t});\n\t};\n}();\n\ndateFormat.masks = {\n\t\"default\"\t      \t:\"ddd mmm dd yyyy HH:MM:ss\",\n\tdayMonthDateYear \t:\"ddd, mmm d, yyyy\",\n\tmonthDate     \t\t:\"mmm d\",\n\tmonthDateYear\t  \t:\"mmm d, yyyy\",\n\tmonthYear \t\t\t:\"mmm yyyy\",\n\ttime24\t         \t:\"HH:MM\",\n\tisoTime\t\t\t\t:\"HH:MM:ss\",\n\tyearOnly\t\t\t:\"yyyy\"\n};\n// Internationalization strings\n\n/*dateFormat.international = {\n\tdayNames: [\n\t\t\"sv\", \"mv\", \"cp\", \"ct\", \"cn\", \"cs\", \"mg\",\"Svondo\" ,\"Muvhuro\" ,\"Chipiri\" ,\"Chitatu\" ,\"China\" ,\"Chishanu\" ,\"Mugovera\"\n\t],\n\tmonthNames: [\n\t\t\"ndr\", \"kkd\", \"krm\", \"kbv\", \"cvb\", \"ckm\", \"ckr\", \"nmv\", \"gny\", \"gmr\", \"mdz\", \"zvt\",\"Ndira\", \"Kukadzi\", \"Kurume\", \"Kubvumbi\", \"Chivabvu\", \"Chikumi\", \"Chikunguru\", \"Nyamavhuvhu\", \"Gunyana\", \"Gumiguru\", \"Mbudzi\", \"Zvita\"\n\t]\n};*/\n\ndateFormat.international = {\n\tdayNames: [\n\t\t\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\",\"Sunday\" ,\"Monday\" ,\"Tuesday\" ,\"Wednesday\" ,\"Thursday\" ,\"Friday\" ,\"Saturday\"\n\t],\n\tmonthNames: [\n\t\t\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\", \"jul\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\",\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n\t]\n};\n\nexport default dateFormat;","import React, { Component} from 'react';\nimport dateFormat from \"./DateFormat\";\n\nDate.prototype.format = function (mask, utc) {\n\treturn dateFormat(this, mask, utc);\n};\n\nclass Canvas extends Component{\n    constructor(props){\n        super(props);\n        const w = Math.max(props.width,220);\n        this.state = {\n            height : 400,\n            width : w,\n            lower_height: 80,\n            grid : {\n                y : true,\n                x : false,\n                strokeStyle : \"rgba(0,0,0,.9)\",\n                lineWidth : .12\n            },\n            axes : {\n                x : {\n                    threshold : .3,\n                    height : 50\n                },\n                y : {\n                    threshold : .2,\n                    width : 20\n                },\n                font : \"15px Arial\",\n                font_color : \"#999\"\n            },\n            slider: {\n                x : .5*w,\n                y : 80,\n                width: 50,\n                height: -80,\n                min_width: 10,\n                lineWidth : 6,\n                stroke: \"#ddd\",\n                fill: \"rgba(255,255,255,0.8)\",\n                drag: false,\n                grow: {\n                    right : false,\n                    left : false \n                },\n                x_at_mouse_down: 0,\n                slide_factor: 1//0.8\n            },\n            y : props.y,\n            x : props.x,\n            scaled: {\n                range_x: [],\n                range_y: {},\n                x : [],\n                y : {}\n            },\n            info_box: -1\n        }\n        var max_y = 100;\n        //get num_digits of max y, to calculate the width of y axis\n        for(var zz in props.y){\n            max_y = Math.max(max_y, Math.max(...props.y[zz]));\n        }        \n        this.state.axes.y.width = max_y.toString().length *10;\n        \n    }\n    componentWillMount(){\n        this.scaleData();\n    }\n    componentDidMount(){\n        this.plotLower(this.state.x, this.state.y);\n    }\n    scaleData = (xx,yy) => {   \n        if(!xx){\n            xx = this.state.x;\n            yy = this.state.y;\n        }\n\n        let max_x = Math.max(...xx);\n        let min_x = Math.min(...xx);\n\n        let x = xx.map((A) => {\n            //add the alowance of the y-axis\n            return ((A - min_x)/(max_x - min_x))*(this.state.width) + this.state.axes.y.width;\n        });\n\n        let allY = [];\n        for(var zz in yy){\n            allY = allY.concat(yy[zz]);\n        }\n\n        let max_y = Math.max(...allY);\n        let min_y = Math.min(...allY);\n\n        let y = {}, y_lower = {};\n        for(var i  in yy){\n            y[i] = [];\n            y_lower[i] = [];\n            for(var j = 1; j < yy[i].length; ++ j){\n\n                let ssy = - ((yy[i][j] - min_y)/(max_y - min_y))*(this.state.height) + this.state.height;\n                \n                let ssy_lower = - ((yy[i][j] - min_y)/(max_y - min_y))*(this.state.lower_height) + this.state.lower_height;\n\n                y[i].push(ssy)\n                y_lower[i].push(ssy_lower);\n            }\n        }\n        this.setState({\n            scaled : {\n                range_x : xx,\n                range_y : yy,\n                x: x,\n                y: y,\n                y_lower : y_lower,\n                all_y : allY\n            }\n        });\n        return {\n            \"x\" : x,\n            \"y\" : y,\n            \"y_lower\" : y_lower,\n            \"all_y\" : allY\n        }\n    }\n    invertScaleY = (scaled_value, min_y, range) => {\n        const scaled = this.state.scaled;\n        const y = scaled.all_y.sort((a,b) => a - b);\n        const l = y.length - 1;\n        min_y = min_y || y[0];\n        range = range || (y[l] - y[0]);\n        \n        return ((- scaled_value + this.state.height)/this.state.height) * range + min_y;\n    }\n    invertScaleX = (scaled_value, min_x, range) => {\n        const scaled = this.state.scaled;\n        const x = scaled.x.sort((a,b) => a - b);\n        const l = x.length - 1;\n        min_x = min_x || x[0];\n        range = range || (x[l] - x[0]);\n\n        return ((scaled_value - this.state.axes.y.width)/this.state.width) * range + min_x;\n    }\n    getFormat = (delta_x) => {\n        const sec = 1000, \n        mins = 60 * sec,\n        hrs = 60 * mins, \n        days = 24 * hrs, \n        weeks = 7 * days,  \n        months = 31 * days; \n\n        if(delta_x > 6*months){\n            return \"monthYear\";\n        }\n        \n        if(delta_x > 8*weeks){\n            return \"monthDateYear\";\n        }\n        if(delta_x > 2*days){\n            return \"monthDate\";\n        }\n        if(delta_x> mins){\n            return \"time24\";\n        }     \n        return \"isoTime\";\n        \n    }\n    plotAxes = (xx, yy) => {\n        \n        const canvas = this.refs.canvas_upper;\n        const ctx = canvas.getContext(\"2d\");\n\n        //clear x axis\n        ctx.clearRect(0,this.state.height,canvas.width + 2*this.state.axes.y.width, this.state.axes.x.height);\n        \n        //clear y axis\n        ctx.clearRect(0,0,this.state.axes.y.width, canvas.height);\n\n        ctx.lineWidth = this.state.grid.lineWidth;\n        ctx.strokeStyle = this.state.grid.strokeStyle;\n        \n        ctx.font = this.state.axes.font;\n        ctx.fillStyle = this.state.axes.font_color;\n    \n        const sorted_y = yy.sort((a,b) => a-b);\n        const range_y = sorted_y[sorted_y.length - 1] - sorted_y[0];\n\n        if(this.state.grid.y){                \n            ctx.beginPath();\n            ctx.lineTo(this.state.axes.y.width, 0);\n            ctx.lineTo(this.state.width + this.state.axes.y.width, 0);  \n            ctx.stroke(); \n        } \n        for(var j = 0, i = 1; j < 10; j++, --i){\n            const y_level = this.state.height +  i * 45;\n            if(this.state.grid.y && j){                \n                ctx.beginPath();\n                ctx.lineTo(this.state.axes.y.width, y_level);\n                ctx.lineTo(this.state.width + this.state.axes.y.width, y_level);  \n                ctx.stroke(); \n            }              \n            const real_y_val = this.invertScaleY(y_level,sorted_y[0],range_y);\n            if(j){\n                real_y_val && ctx.fillText(Math.round(real_y_val),0, y_level );  \n            }\n        }\n\n        const space = 3.5*this.state.axes.y.width;\n        const num_xs = Math.round(this.state.width/space);\n        \n        \n        const mn_x = Math.min(...xx),\n                mx_x = Math.max(...xx);\n\n        const format = this.getFormat(mx_x - mn_x);\n\n        var x_level =  this.state.axes.y.width; //initial point\n        for(var j = 0, i = 1; j < num_xs; j++, --i){            \n            const closest_index = this.state.scaled.x.findIndex(a => a > x_level);\n            if(closest_index !== -1){\n                ctx.fillText(new Date(this.state.scaled.range_x[closest_index]).format(format),x_level, this.state.height + this.state.axes.x.height/2);\n            }\n            if(this.state.grid.y && j){                \n                ctx.beginPath();\n                ctx.lineTo(x_level, this.state.height + this.state.axes.x.height/2);\n                ctx.lineTo(x_level, this.state.height + this.state.axes.x.height/2);  \n                ctx.stroke(); \n            }             \n            x_level += space;\n        }\n         \n    }\n    plotUpper = (xx, yy) => {\n        if(!xx){\n            xx = this.state.x;\n            yy = this.state.y;\n        }\n\n        const canvas = this.refs.canvas_upper;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        \n        const slider = this.state.slider;\n        const slider_rel_x = slider.x - this.state.axes.y.width;\n\n        const start_index = Math.floor(xx.length * slider_rel_x/(this.state.width)) ;\n\n        const end_index = Math.round(xx.length * (slider_rel_x + slider.width)/(this.state.width- 1.9*slider.lineWidth));\n\n        let x = xx.slice(start_index, end_index), y = {};\n        for(var k in yy){\n            y[k] = yy[k].slice(start_index, end_index);\n        }\n\n        const scaled = this.scaleData(x,y);\n        this.plotAxes(x, scaled.all_y);\n\n        ctx.lineWidth = .5;\n        for(var i in scaled.y){\n            ctx.strokeStyle = this.props.colors[i];\n            ctx.beginPath();\n            for(var j = 0; j < scaled.y[i].length; ++ j){\n                ctx.lineTo(scaled.x[j], scaled.y[i][j] );\n                ctx.stroke();  \n            }\n        }\n        \n    }\n    plotLower = (x,y) => {\n        if(!x){\n            x = this.state.x;\n            y = this.state.y;\n        }\n        \n        \n\n        const scaled = this.scaleData(x,y);\n        const canvas = this.refs.canvas_lower;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.lineWidth = 1;\n        for(var i in scaled.y_lower){\n            ctx.strokeStyle = this.props.colors[i];\n            ctx.beginPath(); \n            for(var j = 0; j < scaled.y_lower[i].length; ++ j){\n                ctx.lineTo(scaled.x[j], scaled.y_lower[i][j]);\n                ctx.stroke();  \n            }\n        }\n        this.setState({\n            x: x,\n            y: y\n        }, () => {\n            this.plotSlider();\n            this.plotUpper(x,y);   \n        });\n\n        \n    }\n    plotSlider = () =>{\n        const canvas = this.refs.canvas_lower;\n        const ctx = canvas.getContext(\"2d\");\n        //draw the active part\n        ctx.beginPath();\n\n        ctx.lineWidth = this.state.slider.lineWidth;\n        ctx.rect(\n            this.state.slider.x,\n            this.state.slider.y,\n            this.state.slider.width,\n            this.state.slider.height);\n            ctx.strokeStyle = this.state.slider.stroke;\n        ctx.stroke();\n\n        //draw the inactive parts\n        ctx.beginPath();\n        ctx.rect(\n            this.state.axes.y.width-this.state.slider.lineWidth/2,\n            this.state.slider.y,\n            this.state.slider.x - this.state.axes.y.width,\n            this.state.slider.height);\n        \n        ctx.fillStyle = this.state.slider.fill;\n        ctx.fill();\n\n        //draw the extra inactive part after the active\n        ctx.beginPath();\n        ctx.rect(\n            this.state.slider.x + this.state.slider.width + this.state.slider.lineWidth/2,\n            this.state.slider.y,\n            this.state.width - (this.state.slider.x + this.state.slider.width),\n            this.state.slider.height);\n        \n        ctx.fillStyle = this.state.slider.fill;\n        ctx.fill();\n    }\n    mouseDown = (e) => {\n        const canvas = this.refs.canvas_lower;\n        const pos = e.clientX || e.touches[0].clientX;\n\n        //destroy the info box\n        this.setState({info_box : {\n            index : -1\n        }});\n        \n        const rel_pos = pos - canvas.getBoundingClientRect().left;\n        \n        let slider = this.state.slider\n        const pullArea = {\n            \"left\" : {\n                \"lower\" : slider.x - slider.lineWidth,\n                \"upper\" : slider.x + slider.lineWidth,\n            },\n            \"right\" : {\n                \"lower\" : slider.x + slider.width - slider.lineWidth,\n\n                \"upper\" : slider.x + slider.width + slider.lineWidth,\n            }\n        }\n\n        if(rel_pos > pullArea.left.upper \n            && rel_pos < pullArea.right.lower            ){ //we are draging whole slider\n            \n            slider.drag = true;\n            slider.x_at_mouse_down = rel_pos;\n            this.setState({slider});\n\n        }else if(rel_pos >= pullArea.left.lower && rel_pos <= pullArea.left.upper){ //we are pulling to the left\n            \n            slider.x_at_mouse_down = rel_pos;\n            slider.grow.left = true;\n\n            this.setState({slider});\n        }else if(rel_pos >= pullArea.right.lower && rel_pos <= pullArea.right.upper){ //we are pulling to the right\n            \n            slider.x_at_mouse_down = rel_pos;\n            slider.grow.right = true;\n            this.setState({slider});\n        }        \n    }\n    mouseUp = (e) => {\n        let slider = this.state.slider\n        slider.drag = false;\n        slider.grow.right = false;\n        slider.grow.left = false;\n        slider.x_at_mouse_down = 0;\n        this.setState({slider});\n    }\n    mouseMove = (e) => {  \n        const canvas = this.refs.canvas_lower;\n        const pos = e.clientX || e.touches[0].clientX;;\n        const rel_pos = pos - canvas.getBoundingClientRect().left;      \n        \n        let slider = this.state.slider;\n        var displacement = (rel_pos - slider.x_at_mouse_down) * slider.slide_factor;\n        slider.x_at_mouse_down = rel_pos;  \n\n        if(this.state.slider.drag){             \n            // slider.slide_factor makes sliding it smoother\n            const ctrl = displacement + slider.x;\n            if( ctrl < this.state.axes.y.width){\n                displacement = 0 \n            }else if(ctrl + slider.width > this.state.width){\n                displacement = this.state.width - (slider.width + slider.x);\n                slider.drag = false;\n            }\n            slider.x += displacement;\n            this.setState({slider});\n            this.plotLower();\n        }\n        else if(this.state.slider.grow.left){\n            const ctrl = displacement + slider.x;\n            const width_ctrl = slider.width - displacement;\n        \n            if(ctrl > this.state.axes.y.width && width_ctrl > slider.min_width){\n                slider.x += displacement;\n                slider.width -= displacement;\n                this.setState({slider});\n                this.plotLower();\n            }\n            \n        }else if(this.state.slider.grow.right){\n            const ctrl = displacement + slider.x + slider.width;\n            const width_ctrl = slider.width + displacement;\n        \n            if(ctrl < this.state.width \n                && width_ctrl < this.state.width\n                && width_ctrl > slider.min_width){\n                slider.width += displacement;\n                this.setState({slider});\n                this.plotLower();\n            }\n        }\n    }\n    moveOverUpper = (e) =>{\n        const canvas = this.refs.canvas_upper;\n        const pos = e.clientX || e.touches[0].clientX;;\n        const rel_pos = pos - canvas.getBoundingClientRect().left;\n        const ctx = canvas.getContext(\"2d\");\n\n        if(rel_pos < this.state.grid.y.width){\n            return;\n        }\n        const index = this.state.scaled.x.findIndex((a) => {\n            return a > rel_pos;\n        });\n        \n\n        if(index >= 0){\n            this.setState({info_box : {\n                    index : index,\n                    x : rel_pos - this.state.axes.y.width\n                }\n            },() =>{\n                this.plotUpper()    \n                ctx.strokeStyle = \"#333\";\n                ctx.lineWidth = \"1\";\n                ctx.beginPath()\n                ctx.lineTo(rel_pos, 0);\n                ctx.lineTo(rel_pos, this.state.height);\n                ctx.stroke(); \n\n                const finx = this.state.scaled.x.findIndex((a) => Math.abs(a - rel_pos) < 3 );\n                if(finx !== -1){\n                    ctx.lineWidth = \"2\";\n                    for(var i in this.state.scaled.y){\n                        ctx.beginPath();\n                        ctx.strokeStyle = this.props.colors[i]\n                        ctx.arc(rel_pos, this.state.scaled.y[i][finx], 5, 0, 2 * Math.PI);\n                        ctx.stroke();\n                    }\n                }\n                \n            })                      \n        }        \n    }\n    infoBoxContent(){\n        const index = this.state.info_box.index || -1;\n        if(index < 0){\n            return;\n        }\n        const date = this.state.scaled.range_x[index];\n        const details = []\n\n        for(var i in this.state.scaled.range_y) {\n            const col = this.props.colors[i]\n            details.push(<div key={i} style={{color : col}} className=\"d-inline-flex mr-1 text-center\">\n                    <h4>\n                        {\n                            this.state.scaled.range_y[i][index]\n                        } <br/>\n                        <small>{this.props.names[i]}</small>\n                    </h4>\n                </div>\n            );\n        };\n        return (\n            <div className=\"\">\n                <div className=\"info-date\" key={\"date\"}>\n                    {new Date(date).format(\"dayMonthDateYear\")}\n                </div>\n                {details}\n            </div>            \n        );\n    }   \n    getInforBoxClass(){\n        const index = this.state.info_box.x || -1;\n        return (index < 0) ? \"info-box d-none\" : \"info-box d-flex\";\n    }\n    render () {\n    \n        return (\n            <div onMouseUp={this.mouseUp} className=\"chart-area d-block\">\n                <div className={this.getInforBoxClass()} style={{left:this.state.info_box.x}}>\n                    {this.infoBoxContent()}\n                </div>\n                <canvas \n                    ref=\"canvas_upper\" \n                    width={this.state.width + 2*this.state.axes.y.width} \n                    height={this.state.height + this.state.axes.x.height} \n                    onMouseMove={this.moveOverUpper} \n                    onTouchMove={this.moveOverUpper} \n                />\n                <canvas \n                    ref=\"canvas_lower\" \n                    width={this.state.width} \n                    height={this.state.lower_height} \n                    onMouseDown={this.mouseDown.bind(this)} \n                    onMouseMove={this.mouseMove} \n                    onMouseUp={this.mouseUp} \n                    onPointerDown={this.mouseDown} \n                    onPointerMove={this.mouseMove} \n                    onPointerDown={this.mouseDown} \n                    onTouchStart={this.mouseDown}\n                    onTouchMove={this.mouseMove}\n                    onTouchEnd={this.mouseUp}\n                    />\n               \n            </div>\n        )\n    }\n\n}\n\nexport default Canvas;","import React, {Component } from \"react\"\nimport Canvas from \"./Canvas\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle} from '@fortawesome/free-solid-svg-icons'\nimport {faCircle } from '@fortawesome/free-regular-svg-icons'\n\nimport data from \"./data/chart_data\"\n\nclass Chart extends Component{\n    constructor (props) {\n        super(props);\n        this.state = {\n            data: data[props.chart],\n            names: Object.keys(data[props.chart].names),\n            active: {},\n            x : [],\n            y : {}\n        }\n        for (var ky in this.state.names){\n            this.state.active[this.state.names[ky]] = true;\n        }\n        this.state.x = this.state.data.columns.filter((arr) => {\n            return arr[0] === 'x';\n        })[0].slice(1);\n\n        let y = {};\n        for(var i = 0; i < this.state.data.columns.length; ++i){\n            let k = this.state.data.columns[i][0]\n            if(k === 'x')\n                continue;            \n            y[k] = this.state.data.columns[i].slice(1);\n        }\n        this.state.y = y; \n        this.canvasElement = React.createRef();       \n    }\n    getWidth(){\n        const w = document.body.offsetWidth - 400;\n        return w;\n    }\n    activeData = () => {       \n        let active_columns = {};\n        for(var ky in this.state.active){\n            if(this.state.active[ky]){\n                active_columns[ky] = this.state.y[ky];\n            }\n        }\n        return active_columns;\n    }\n    buttonRow = () => {\n        return Object.entries(this.state.data.names).map((k) => {\n            return (\n\n                <button \n                    key = {k[0]}\n                    className=\"action-btn\" \n                    style={ {color : this.state.data.colors[k[0]]}}\n                    onClick={() => {\n                            let active = this.state.active;\n                            active[k[0]] = !active[k[0]];\n                            this.setState({active})\n                            this.canvasElement.current.plotLower(this.state.x, this.activeData());\n                        }\n                    }\n                >\n                    {\n                        this.state.active[k[0]] ? \n                            <FontAwesomeIcon icon={faCheckCircle} />\n                        :   <FontAwesomeIcon icon={faCircle} />\n                    }          \n                    {k[1]} \n            </button>\n            )\n        });\n    }\n    render() {\n        \n        return (\n            <div>\n                <Canvas \n                    ref={this.canvasElement} \n                    x={this.state.x} \n                    y={this.activeData()} \n                    colors={this.state.data.colors}\n                    names={this.state.data.names} \n                    width={this.getWidth()}\n                    />\n\n                <div className=\"row mx-3\">\n                    {this.buttonRow()}\n                </div>\n            </div>\n        )\n    }\n}\nexport default Chart;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMoon} from '@fortawesome/free-solid-svg-icons'\n\nimport Chart from \"./chart/Chart\"\nimport './App.css';\n\nclass App extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      themes : [\"App light\", \"App mojave\"],\n      current_theme: 0,\n      width : 400\n    }   \n  }\n  themeSwitcher (){\n    return (            \n        <FontAwesomeIcon icon={faMoon} className=\"theme-switcher fa-2x mx-3 mt-1\" \n        onClick={() => {\n            this.setState({\n              current_theme : (this.state.current_theme === 0)? 1 : 0\n            })\n        }\n      }/>\n    )\n  }\n  render() {\n    return (\n      <div className={this.state.themes[this.state.current_theme]} >\n        <div className=\"charcoal fixed-top row\">\n          <h1 className=\"mx-3\">Statistics</h1>\n          {this.themeSwitcher()}\n        </div>\n        <div className=\"mt-5 pt-3\">\n          <div className=\"row my-3 mt-5\"><Chart chart={0}/></div>\n          <div className=\"row my-3\"><Chart chart={1}/></div>\n          <div className=\"row my-3\"><Chart chart={2}/></div>\n          <div className=\"row my-3\"><Chart chart={3}/></div>\n          <div className=\"row my-3\"><Chart chart={4}/></div>\n        </div>\n        \n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}